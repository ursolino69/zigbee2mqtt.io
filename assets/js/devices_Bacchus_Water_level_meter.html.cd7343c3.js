"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[30392],{32880:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>c,data:()=>l});var o=a(6254);const i={},c=(0,a(70390).A)(i,[["render",function(e,t){const a=(0,o.g2)("RouteLink");return(0,o.uX)(),(0,o.CE)("div",null,[t[7]||(t[7]=(0,o.Lk)("h1",{id:"bacchus-bacchus-water-level-meter",tabindex:"-1"},[(0,o.Lk)("a",{class:"header-anchor",href:"#bacchus-bacchus-water-level-meter"},[(0,o.Lk)("span",null,"Bacchus Bacchus Water level meter")])],-1)),(0,o.Lk)("table",null,[t[6]||(t[6]=(0,o.Lk)("thead",null,[(0,o.Lk)("tr",null,[(0,o.Lk)("th"),(0,o.Lk)("th")])],-1)),(0,o.Lk)("tbody",null,[t[2]||(t[2]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Model"),(0,o.Lk)("td",null,"Bacchus Water level meter")],-1)),(0,o.Lk)("tr",null,[t[1]||(t[1]=(0,o.Lk)("td",null,"Vendor",-1)),(0,o.Lk)("td",null,[(0,o.bF)(a,{to:"/supported-devices/#v=Bacchus"},{default:(0,o.k6)((()=>t[0]||(t[0]=[(0,o.eW)("Bacchus")]))),_:1})])]),t[3]||(t[3]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Description"),(0,o.Lk)("td",null,"Bacchus tank water level sensor")],-1)),t[4]||(t[4]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Exposes"),(0,o.Lk)("td",null,"water_level, filling, tank_height, alarm_min_threshold, alarm_max_threshold, measurment_period, battery, voltage")],-1)),t[5]||(t[5]=(0,o.Lk)("tr",null,[(0,o.Lk)("td",null,"Picture"),(0,o.Lk)("td",null,[(0,o.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/Bacchus-Water-level-meter.png",alt:"Bacchus Bacchus Water level meter"})])],-1))])]),t[8]||(t[8]=(0,o.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="water-level-numeric" tabindex="-1"><a class="header-anchor" href="#water-level-numeric"><span>Water level (numeric)</span></a></h3><p>Current water level in cm. Value can be found in the published state on the <code>water_level</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>cm</code>.</p><h3 id="filling-numeric" tabindex="-1"><a class="header-anchor" href="#filling-numeric"><span>Filling (numeric)</span></a></h3><p>Tank filling. Value can be found in the published state on the <code>filling</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The unit of this value is <code>%</code>.</p><h3 id="tank-height-numeric" tabindex="-1"><a class="header-anchor" href="#tank-height-numeric"><span>Tank height (numeric)</span></a></h3><p>Water tank height in cm. Value can be found in the published state on the <code>tank_height</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;tank_height&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>450</code>. The unit of this value is <code>cm</code>.</p><h3 id="alarm-min-threshold-numeric" tabindex="-1"><a class="header-anchor" href="#alarm-min-threshold-numeric"><span>Alarm min threshold (numeric)</span></a></h3><p>Min threshold for alarm binding. Value can be found in the published state on the <code>alarm_min_threshold</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;alarm_min_threshold&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="alarm-max-threshold-numeric" tabindex="-1"><a class="header-anchor" href="#alarm-max-threshold-numeric"><span>Alarm max threshold (numeric)</span></a></h3><p>Max threshold for alarm binding. Value can be found in the published state on the <code>alarm_max_threshold</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;alarm_max_threshold&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="measurment-period-numeric" tabindex="-1"><a class="header-anchor" href="#measurment-period-numeric"><span>Measurment period (numeric)</span></a></h3><p>Max threshold for alarm binding. Value can be found in the published state on the <code>measurment_period</code> property. It&#39;s not possible to read (<code>/get</code>) this value. To write (<code>/set</code>) a value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/set</code> with payload <code>{&quot;measurment_period&quot;: NEW_VALUE}</code>. The minimal value is <code>0</code> and the maximum value is <code>3600</code>. The unit of this value is <code>sec</code>.</p><h3 id="battery-numeric" tabindex="-1"><a class="header-anchor" href="#battery-numeric"><span>Battery (numeric)</span></a></h3><p>Remaining battery in %. Value can be found in the published state on the <code>battery</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;battery&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The minimal value is <code>0</code> and the maximum value is <code>100</code>. The unit of this value is <code>%</code>.</p><h3 id="voltage-numeric" tabindex="-1"><a class="header-anchor" href="#voltage-numeric"><span>Voltage (numeric)</span></a></h3><p>Reported battery voltage in millivolts. Value can be found in the published state on the <code>voltage</code> property. To read (<code>/get</code>) the value publish a message to topic <code>zigbee2mqtt/FRIENDLY_NAME/get</code> with payload <code>{&quot;voltage&quot;: &quot;&quot;}</code>. It&#39;s not possible to write (<code>/set</code>) this value. The unit of this value is <code>mV</code>.</p>',17))])}]]),l=JSON.parse('{"path":"/devices/Bacchus_Water_level_meter.html","title":"Bacchus Bacchus Water level meter control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"Bacchus Bacchus Water level meter control via MQTT","description":"Integrate your Bacchus Bacchus Water level meter via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2025-05-01T17:59:08.000Z"},"git":{"updatedTime":1746467613000,"contributors":[{"name":"Koen Kanters","username":"","email":"koenkanters94@gmail.com","commits":1}],"changelog":[{"hash":"2362e642109aefc5242bf3330360479b7886f430","time":1746467613000,"email":"koenkanters94@gmail.com","author":"Koen Kanters","message":"chore: fully switch to Dependabot"}]},"filePathRelative":"devices/Bacchus_Water_level_meter.md"}')}}]);